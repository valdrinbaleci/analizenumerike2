package numerike2;
import javax.swing.JOptionPane;
import java.util.Scanner;
import java.util.Arrays;
public class VektoreMatrica {

	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
        
		Object[] options = {"Mbledhje",
                            "Zbritje",
                            "Norma euklidiane",
                            "Norma infinit",
                            "Distanca euklidiane ",
                            "Distanca infinit",
                            "Norma infinit matricore",
                            "Norma Frobenius"};
        int detyra = JOptionPane.showOptionDialog(null,
                               "Zgjedh llojin e detyres",
                               "Numerike 2",
                                JOptionPane.DEFAULT_OPTION, 
                                JOptionPane.QUESTION_MESSAGE,
                                null,
                                options,
                                options[7]);
		
		// mbledhja e vektoreve apo matricave
		if(detyra==0){
			Object[] opsioni = {"Vektor","Matrice"};
		      int n = JOptionPane.showOptionDialog(null,
		               "Mbledh vektor apo matrice?",
		               "Mbedhja",
		               JOptionPane.DEFAULT_OPTION,
		               JOptionPane.QUESTION_MESSAGE,
		               null,
		               opsioni,
		               opsioni[1]);
		
	    System.out.println("Jep rendin e matrices dhe vektorit:");
	    int rendi=input.nextInt();
	
	    if (n==0){
	    	int [] vektor_mbledhje_zbritje=new int [rendi];
	    	int vektori[]=new int[rendi];
		    System.out.println("Jep elementet e vektorit te pare:");
			for (int i=0; i<rendi;i=i+1){
				vektori[i]=input.nextInt();
			}
			System.out.println("Jep elementet e vektorit te dyte:");
			int vektori1[]=new int[rendi];
			for (int i=0; i<rendi;i=i+1){
				vektori1[i]=input.nextInt();
			}
			System.out.println("Shuma e vektoreve eshte:");
			for (int i=0; i<rendi; i=i+1){
				vektor_mbledhje_zbritje[i]=vektori1[i]+vektori[i];
			}
			for (int i=0; i<rendi; i=i+1){
				System.out.print(vektor_mbledhje_zbritje[i]+" ");
			}
			
	    }
	    else{
	    	int [][] matrice_mbledhje_zbritje=new int [rendi][rendi]; 
			System.out.println("Jep elemtentet e matrices se pare:");
			int matrica[][]=new int[rendi][rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					matrica[i][j]=input.nextInt();
				}
			}
			System.out.println("Jep elementet e matrices se dyte :");
			int matrica1[][]=new int[rendi][rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					matrica1[i][j]=input.nextInt();
				}
			}
			for (int i=0; i<rendi; i=i+1){
				for (int j=0; j<rendi; j=j+1){
					matrice_mbledhje_zbritje[i][j]= matrica1[i][j]+matrica[i][j];
				}
				
				
			}
			System.out.println("Shuma e matricave eshte :");
			for (int i=0; i<rendi; i=i+1){
				for (int j=0; j<rendi; j=j+1){
					System.out.print(matrice_mbledhje_zbritje[i][j]+" ");
				}System.out.println();
		    }
	    }
		
		}
		
		
		
		//Zbritja e numrit me vektor apo matrice
		
		else if(detyra==1){
			Object[] opsioni = {"Vektor","Matrice"};
		      int n = JOptionPane.showOptionDialog(null,
		               "Numrin do e zbresesh me :",
		               "Zbritja",
		               JOptionPane.DEFAULT_OPTION,
		               JOptionPane.DEFAULT_OPTION,
		               null,
		               opsioni,
		               opsioni[1]);
		
	    System.out.println("Jep rendin e matrices dhe vektorit:");
	    int rendi=input.nextInt();
	
	    if (n==0){
	    	int [] vektor_mbledhje_zbritje=new int [rendi];
	    	int vektori[]=new int[rendi];
		    System.out.println("Jep elementet e vektorit te pare:");
			for (int i=0; i<rendi;i=i+1){
				vektori[i]=input.nextInt();
			}
			System.out.println("Jep elementet e vektorit te dyte:");
			int vektori1[]=new int[rendi];
			for (int i=0; i<rendi;i=i+1){
				vektori1[i]=input.nextInt();
			}
			System.out.println("Ndryshimi i vektoreve eshte:");
			for (int i=0; i<rendi; i=i+1){
				vektor_mbledhje_zbritje[i]=vektori[i]-vektori1[i];
			}
			for (int i=0; i<rendi; i=i+1){
				System.out.print(vektor_mbledhje_zbritje[i]+" ");
			}
			
	    }
	    else{
	    	int [][] matrice_mbledhje_zbritje=new int [rendi][rendi]; 
			System.out.println("Jep elementet e matrices se pare:");
			int matrica[][]=new int[rendi][rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					matrica[i][j]=input.nextInt();
				}
			}
			System.out.println("Jep elementet e matrices se dyte :");
			int matrica1[][]=new int[rendi][rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					matrica1[i][j]=input.nextInt();
				}
			}
			for (int i=0; i<rendi; i=i+1){
				for (int j=0; j<rendi; j=j+1){
					matrice_mbledhje_zbritje[i][j]= matrica[i][j]-matrica1[i][j];
				}
				
				
			}
			System.out.println("Ndryshimi i matricave eshte :");
			for (int i=0; i<rendi; i=i+1){
				for (int j=0; j<rendi; j=j+1){
					System.out.print(matrice_mbledhje_zbritje[i][j]+" ");
				}System.out.println();
		    }
	    }
		
		}
		
		
		
		//Norma euklidiane e vektorit

		else if(detyra==2){
		System.out.println("Jep rendin e vektorit:");
		int rendi=input.nextInt();
		System.out.println("Jep elementet e vektorit:");
		int vektori[]=new int[rendi];
		for (int i=0; i<rendi;i=i+1){
			vektori[i]=input.nextInt();
		}
		double l2=0;
		for (int i=0; i<rendi; i=i+1){
			l2= l2+Math.pow(vektori[i],2);
		}
		System.out.println("||x||2="+Math.sqrt(l2));
		}
		
		
		
		// Norma Infinit e vektorit
		
		else if(detyra==3){
		System.out.println("Jep rendin e vektorit:");
		int rendi=input.nextInt();
		System.out.println("Jep elementet e vektorit:");
		int vektori[]=new int[rendi];
		for (int i=0; i<rendi;i=i+1){
			vektori[i]=input.nextInt();
		}
		int[] vektor_abs=new int[rendi];
		for (int i=0; i<rendi; i=i+1){
			vektor_abs[i]=Math.abs(vektori[i]);
		}
		Arrays.sort(vektor_abs);
		int max = vektor_abs[vektor_abs.length - 1];
		System.out.println("||x||infinit="+max);
		}
		
		
		//Disktanca Euklidiane e vektoreve
		else if(detyra==4){
			System.out.println("Jep rendin e vektorit:");
			int rendi=input.nextInt();
			System.out.println("Jep elementet e vektorit 'X':");
			int vektori_X[]=new int[rendi];
			for (int i=0; i<rendi;i=i+1){
				vektori_X[i]=input.nextInt();
			}
			System.out.println("Shtyp elementet e vektorit 'Y':");
			int vektori_Y[]=new int[rendi];
			for (int i=0; i<rendi_;i=i+1){
				vektori_Y[i]=input.nextInt();
			}
			double l2=0;
			for (int i=0; i<rendi; i=i+1){
				l2= l2+Math.pow(vektori_X[i]-vektori_Y[i],2);
			}
			System.out.println("||X-Y||2="+Math.sqrt(l2));
								
		}
		
        
		//Distanca infinit e vektoreve 
		else if(detyra==5){
        	System.out.println("Jep rendin e vektoreve:");
			int rendi=input.nextInt();
			System.out.println("Jep elementet e vektorit 'X':");
			int vektori_X[]=new int[rendi];
			for (int i=0; i<rendi;i=i+1){
				vektori_X[i]=input.nextInt();
			}
			System.out.println("Jep elementet e vektorit 'Y':");
			int vektori_Y[]=new int[rendi];
			for (int i=0; i<rendi;i=i+1){
				vektori_Y[i]=input.nextInt();
			}
			int[] vektori_abs=new int[rendi];
			for (int i=0; i<rendi; i=i+1){
				vektori_abs[i]=Math.abs(vektori_X[i]-vektori_Y[i]);
			}
			Arrays.sort(vektori_abs);
			int max = vektori_abs[vektori_abs.length - 1];
			System.out.println("||X-Y||infinit="+max);
						
		}
		
			
		// Norma infinit e matrices
		else if(detyra==6){
			System.out.println("Jep rendin e matrices:");
			int rendi=input.nextInt();
			int matrica[][]=new int[rendi][rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					matrica[i][j]=input.nextInt();
				}
			}
			int []shuma_vektor=new int[rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					shuma_vektor[i]=shuma_vektor[i]+Math.abs(matrica[i][j]);
				}
			}
			
			Arrays.sort(shuma_vektor);
			int max = shuma_vektor[shuma_vektor.length - 1];
			System.out.println("||A||inftinit="+max);
		}
       
		
		//Norma Frobenius
		else if(detyra==7){
			System.out.println("Jep rendin e matrices:");
			int rendi=input.nextInt();
			int matrica[][]=new int[rendi][rendi];
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					matrica[i][j]=input.nextInt();
				}
			}
			double Af=0;
			for(int i=0; i<rendi;i=i+1){
				for(int j=0; j<rendi; j=j+1){
					Af=Af+Math.pow(Math.abs(matrica[i][j]), 2);
				}
			}
			System.out.println("||A||Frobenius"+Math.sqrt(Af));
			
		}
	}

}

